{"version":3,"sources":["components/ContactForm/ContactForm.js","components/FilterContact/FilterContact.js","components/ContactList/ContactList.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/FilterContact/FilterContact.module.css"],"names":["ContactForm","addContact","onSubmit","className","styles","form","type","name","pattern","title","required","placeholder","value","btn","FilterContact","filterContacts","container","onChange","ContactList","contacts","filter","onRemoveContact","map","id","tel","contact","toLowerCase","includes","onClick","App","state","e","preventDefault","setState","prevState","some","target","alert","uuidv4","removeContact","contactId","setContactsToLocalStorage","localStorage","setItem","JSON","stringify","setStateContactsFromLocalStorage","getItem","parse","this","Component","ReactDom","render","document","querySelector","module","exports"],"mappings":"8PAEe,SAASA,EAAT,GAAsC,IAAfC,EAAc,EAAdA,WACpC,OACE,uBAAMC,SAAUD,EAAYE,UAAWC,IAAOC,KAA9C,UACE,uCACA,uBACEC,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,YAAY,SAEd,mDACA,uBACEL,KAAK,MACLC,KAAK,MACLC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,YAAY,qBAEd,8BACE,uBAAOL,KAAK,SAASM,MAAM,cAAcT,UAAWC,IAAOS,W,oBCtBpD,SAASC,EAAT,GAA4C,IAAnBC,EAAkB,EAAlBA,eACtC,OACE,qBAAKZ,UAAWC,IAAOY,UAAvB,SACE,uBAAOV,KAAK,OAAOW,SAAUF,EAAgBJ,YAAY,a,oBCHhD,SAASO,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBACtD,OACE,8BACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,IAAb,OACZ,qBAAcrB,UAAWC,IAAOqB,QAAhC,SACGlB,EAAKmB,cAAcC,SAASP,EAAOM,gBAClC,qCACE,wBACEpB,KAAK,SACLsB,QAAS,kBAAMP,EAAgBE,IAC/BpB,UAAWC,IAAOS,IAHpB,oBAOA,iCAAON,EAAP,OARF,IAQuB,+BAAOiB,QAVxBD,Q,ICwEHM,E,4MAvEbC,MAAQ,CACNX,SAAU,GACVC,OAAQ,I,EAEVnB,WAAa,SAAC8B,GACZA,EAAEC,iBACF,EAAKC,UAAS,SAACC,GACb,OACEA,EAAUf,SAASgB,MACjB,SAACV,GAAD,OAAaA,EAAQlB,OAASwB,EAAEK,OAAO7B,KAAKK,SAGvCyB,MAAM,oCAER,CACLlB,SAAS,GAAD,mBACHe,EAAUf,UADP,CAEN,CAAEZ,KAAMwB,EAAEK,OAAO7B,KAAKK,MAAOY,IAAKO,EAAEK,OAAOZ,IAAIZ,MAAOW,GAAIe,sB,EAKlEC,cAAgB,SAACC,GACf,EAAKP,UAAS,SAACC,GACb,MAAO,CACLf,SAAUe,EAAUf,SAASC,QAAO,YAClC,OAD8C,EAATG,KACvBiB,U,EAKtBzB,eAAiB,SAACgB,GAChB,EAAKE,SAAS,CAAEb,OAAQW,EAAEK,OAAOxB,S,EAGnC6B,0BAA4B,WAC1BC,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,EAAKf,MAAMX,Y,EAG7D2B,iCAAmC,WAC7BJ,aAAaK,QAAQ,aACvB,EAAKd,SAAS,CAAEd,SAAUyB,KAAKI,MAAMN,aAAaK,QAAQ,gB,uDAI9D,WACEE,KAAKH,qC,gCAGP,WACEG,KAAKR,8B,oBAGP,WAAU,IAAD,EACsBQ,KAAKnB,MAA1BX,EADD,EACCA,SAAUC,EADX,EACWA,OAClB,OACE,sBAAKjB,UAAU,gBAAf,UACE,2CACA,cAACH,EAAD,CAAaC,WAAYgD,KAAKhD,aAC9B,0CACA,cAACa,EAAD,CAAeC,eAAgBkC,KAAKlC,iBACpC,cAACG,EAAD,CACEC,SAAUA,EACVC,OAAQA,EACRC,gBAAiB4B,KAAKV,uB,GAjEdW,aCKlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W,kBCVhDC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,IAAM,2B,kBCAzDD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,QAAU,+B,kBCA3DD,EAAOC,QAAU,CAAC,UAAY,oC","file":"static/js/main.7e450985.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nexport default function ContactForm({ addContact }) {\r\n  return (\r\n    <form onSubmit={addContact} className={styles.form}>\r\n      <div>Name</div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        placeholder=\"Name\"\r\n      />\r\n      <div>Telephone Number</div>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"tel\"\r\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n        required\r\n        placeholder=\"Telephone Number\"\r\n      />\r\n      <div>\r\n        <input type=\"submit\" value=\"Add Contact\" className={styles.btn} />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./FilterContact.module.css\";\r\nexport default function FilterContact({ filterContacts }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <input type=\"text\" onChange={filterContacts} placeholder=\"Search\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nexport default function ContactList({ contacts, filter, onRemoveContact }) {\r\n  return (\r\n    <div>\r\n      {contacts.map(({ id, name, tel }) => (\r\n        <div key={id} className={styles.contact}>\r\n          {name.toLowerCase().includes(filter.toLowerCase()) && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onRemoveContact(id)}\r\n                className={styles.btn}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span>{name}:</span> <span>{tel}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./ContactForm\";\nimport FilterContact from \"./FilterContact\";\nimport ContactList from \"./ContactList\";\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  addContact = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => {\n      if (\n        prevState.contacts.some(\n          (contact) => contact.name === e.target.name.value\n        )\n      ) {\n        return alert(\"This contact name already exists\");\n      }\n      return {\n        contacts: [\n          ...prevState.contacts,\n          { name: e.target.name.value, tel: e.target.tel.value, id: uuidv4() },\n        ],\n      };\n    });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => {\n          return id !== contactId;\n        }),\n      };\n    });\n  };\n  filterContacts = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  setContactsToLocalStorage = () => {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  setStateContactsFromLocalStorage = () => {\n    if (localStorage.getItem(\"contacts\")) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\n    }\n  };\n\n  componentDidMount() {\n    this.setStateContactsFromLocalStorage();\n  }\n\n  componentDidUpdate() {\n    this.setContactsToLocalStorage();\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div className=\"maincontainer\">\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <FilterContact filterContacts={this.filterContacts} />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          onRemoveContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n//==================================================================\n\n// Компоненты Components\n// Компоненты после создания можно использовать много раз\n// Дерево похожее как в html\n// В Components смотреть структуру\n\n// ReactDom.render(<Product />, document.querySelector(\"#root\"));\nReactDom.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2uXFR\",\"btn\":\"ContactForm_btn__3gqwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2crOM\",\"contact\":\"ContactList_contact__3SQyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterContact_container__1vUnY\"};"],"sourceRoot":""}